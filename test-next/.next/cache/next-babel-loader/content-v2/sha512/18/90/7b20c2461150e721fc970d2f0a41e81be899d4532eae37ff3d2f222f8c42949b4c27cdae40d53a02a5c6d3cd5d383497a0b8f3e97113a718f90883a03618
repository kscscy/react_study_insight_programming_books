{"ast":null,"code":"import _defineProperty from \"/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * 모든 페이지에서 공통으로 필요한 기능은 pages/_app.js 파일에서 구현할 수 있다.\n * 페이지가 전환돼도 메뉴 UI 를 그대로 유지하고 싶다면 _app.js파일에서 구현하는 게 좋다.\n */\nimport Link from 'next/link'; // Component 속성값은 현재 렌더링하려는 페이지 컴포넌트이고, \n// pageProps 속성값은 해당 페이지의 getInitialProps함수가 반환한 값이다.\n\nexport default function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/page1\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"page1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/page2\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"page2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/**\n * MyApp 컴포넌트는 페이지가 전환되는 경우에도 언마운트 되지 않는다.\n * 메뉴 UI 는 항상 유지돼야 하므로 _app.js 파일에서 메뉴 UI를 구현하는 것이 자연스럽다.\n * \n */\n\n_c = MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/pages/_app.js"],"names":["Link","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,WAAjB,C,CAEA;AACA;;AACA,eAAe,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACtD,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAED;AACA;AACA;AACA;AACA;;KAlBwBF,K","sourcesContent":["/**\n * 모든 페이지에서 공통으로 필요한 기능은 pages/_app.js 파일에서 구현할 수 있다.\n * 페이지가 전환돼도 메뉴 UI 를 그대로 유지하고 싶다면 _app.js파일에서 구현하는 게 좋다.\n */\nimport Link from 'next/link';\n\n// Component 속성값은 현재 렌더링하려는 페이지 컴포넌트이고, \n// pageProps 속성값은 해당 페이지의 getInitialProps함수가 반환한 값이다.\nexport default function MyApp({ Component, pageProps }) {\n  return (\n    <div>\n      <Link href='/page1'>\n        <a>page1</a>\n      </Link>\n      <Link href='/page2'>\n        <a>page2</a>\n      </Link>\n      <Component {...pageProps} />\n    </div>\n  );\n}\n\n/**\n * MyApp 컴포넌트는 페이지가 전환되는 경우에도 언마운트 되지 않는다.\n * 메뉴 UI 는 항상 유지돼야 하므로 _app.js 파일에서 메뉴 UI를 구현하는 것이 자연스럽다.\n * \n */"]},"metadata":{},"sourceType":"module"}