{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 8-61 next 에서 styled-components 패키지를 사용할 수 있도록 설정하기\n\n/**\n * next에서는 pages 폴더 밑에 _document.js 파일을 작성할 수 있도록 허용한다.\n * _document.js 파일을 생성하면 next는 내장된 _document.js 파일 대신 우리가 작성한 파일을 사용한다.\n */\nimport Document from 'next/document';\nimport { ServerStyleSheet } from 'styled-components'; // next의 Document 컴포넌트를 상속받아서 컴포넌트를 만든다.\n\nexport default class MyDocument extends Document {\n  // next에 내장된 Document 컴포넌트의 getInitialProps 함수에서는 styled-jsx의 스타일 코드를 추출한다.\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        // MyDocument 컴포넌트의 getInitialProps 메서드는 styled-components 의 스타일 코드를 추출한다.\n        enhanceApp: App => props => sheet.collectStyles( /*#__PURE__*/_jsx(App, _objectSpread({}, props)))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: /*#__PURE__*/_jsxs(_Fragment, {\n          children: [initialProps.styles, sheet.getStyleElement()]\n        })\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}