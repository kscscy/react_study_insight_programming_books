{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/pages/_error.js\";\n\n// 에러 페이지도 getInitialProps 함수를 사용할 수 있다.\nErrorPage.getInitialProps = function (_ref) {\n  var res = _ref.res,\n      err = _ref.err;\n  // 에러 코드를 페이지 컴포넌트의 속성값으로 전달한다.\n  var statusCode = res ? res.statusCode : err ? err.statusCode : null;\n  return {\n    statusCode: statusCode\n  };\n};\n\nexport default function ErrorPage(_ref2) {\n  var statusCode = _ref2.statusCode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [statusCode === 404 && '페이지를 찾을 수 없습니다.', statusCode === 500 && '알 수 없는 에러가 발생했습니다.', !statusCode && '클라이언트에서 에러가 발생했습니다.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = ErrorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"sources":["/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/pages/_error.js"],"names":["ErrorPage","getInitialProps","res","err","statusCode"],"mappings":";;;AAAA;AACAA,SAAS,CAACC,eAAV,GAA4B,gBAAkB;AAAA,MAAfC,GAAe,QAAfA,GAAe;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC5C;AACA,MAAMC,UAAU,GAAGF,GAAG,GAAGA,GAAG,CAACE,UAAP,GAAoBD,GAAG,GAAGA,GAAG,CAACC,UAAP,GAAoB,IAAjE;AACA,SAAO;AAAEA,IAAAA,UAAU,EAAVA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAe,SAASJ,SAAT,QAAmC;AAAA,MAAdI,UAAc,SAAdA,UAAc;AAChD,sBACE;AAAA,eAIGA,UAAU,KAAK,GAAf,IAAsB,iBAJzB,EAKGA,UAAU,KAAK,GAAf,IAAsB,oBALzB,EAMG,CAACA,UAAD,IAAe,qBANlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAXuBJ,S","sourcesContent":["// 에러 페이지도 getInitialProps 함수를 사용할 수 있다.\nErrorPage.getInitialProps = ({ res, err }) => {\n  // 에러 코드를 페이지 컴포넌트의 속성값으로 전달한다.\n  const statusCode = res ? res.statusCode : err ? err.statusCode : null;\n  return { statusCode };\n};\n\nexport default function ErrorPage({ statusCode }) {\n  return (\n    <div>\n      {/** statusCode 변수의 값에 따라 다른 에러 메시지를 출력한다.\n       * 만약 statusCode 변수의 값이 존재하지 않으면 클라이언트에서 발생한 에러다.\n       */}\n      {statusCode === 404 && '페이지를 찾을 수 없습니다.'}\n      {statusCode === 500 && '알 수 없는 에러가 발생했습니다.'}\n      {!statusCode && '클라이언트에서 에러가 발생했습니다.'}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}