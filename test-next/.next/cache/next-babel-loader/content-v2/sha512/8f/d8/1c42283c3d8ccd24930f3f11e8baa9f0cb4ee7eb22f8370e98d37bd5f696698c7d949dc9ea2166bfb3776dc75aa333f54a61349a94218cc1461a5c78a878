{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/devsc/Desktop/Study/ReactStudy/react-programming-books/test-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// 8-51, 52\nimport { callApi } from '../src/api';\n\nPage2.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var query, _yield$import, sayHello, text, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            _context.next = 3;\n            return import('../src/sayHello');\n\n          case 3:\n            _yield$import = _context.sent;\n            sayHello = _yield$import.sayHello;\n            console.log('dynamic import', sayHello());\n            text = query.text || 'none';\n            _context.next = 9;\n            return callApi();\n\n          case 9:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              text: text,\n              data: data\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default function Page2(_ref3) {\n  var text = _ref3.text,\n      data = _ref3.data;\n  //function onClick() {\n  // 동적 import 를 사용해서 sayHello 모듈을 가져온다.\n  //import('../src/sayHello').then(({sayHello}) => console.log(sayHello()));\n\n  /**\n   * 버튼을 클릭하는 순간 sayHelloj.js 모듈이 담긴 js 파일이 전송되는 것을 확인할 수 있다.(최초 한 번)\n   * .next/static/chunks 폴더 밑에 sayHello.js 모듈의 코드를 포함하는 번들 파일이 있다.\n   * .next/server 폴더 밑에 sayHello.js 모듈의 코드를 포함하는 번들 파일이 있다.\n   * \n   * 동적 import 를 사용하면 클라이언트뿐만 아니라 서버를 위한 번들 파일도 생성되는 것을 확인할 수 있다.\n   * .next/server 폴더 밑에 생성되는 파일은 서버사이드 렌더링 시 사용된다.\n   */\n  // }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"p\", {\n      children: \"This is home page2\"\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: \"text: \".concat(text)\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: \"data is \".concat(data)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}